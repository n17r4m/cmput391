Links of note:

http://docs.meteor.com
https://docs.mongodb.org/manual/crud/
http://semantic-ui.com/
https://github.com/kadirahq/flow-router/
https://github.com/kadirahq/blaze-layout/
https://github.com/meteor-useraccounts/core/
https://github.com/meteor-useraccounts/flow-routing/
https://github.com/alanning/meteor-roles
https://github.com/arillo/meteor-flow-router-helpers/
https://github.com/zimme/meteor-active-route
http://momentjs.com/
https://github.com/BreadMaker/semantic-ui-daterangepicker

https://github.com/CollectionFS/Meteor-CollectionFS/wiki

Packages included in project:

$ meteor list     
accounts-password           1.1.6  Password support for accounts
alanning:roles              1.2.15  Authorization package for Meteor
arillo:flow-router-helpers  0.5.1  Template helpers for flow-router
autopublish                 1.0.5  (For prototyping only) Publish the entire database to all clients
blaze-html-templates        1.0.2  Compile HTML templates into reactive UI with Meteor Blaze
cfs:access-point            0.1.49  CollectionFS, add ddp and http accesspoint capability
cfs:graphicsmagick          0.0.18  Adds `gm` to scope with the ability to perform GraphicsMagick or ImageMagick manipulation
cfs:gridfs                  0.0.33  GridFS storage adapter for CollectionFS
cfs:standard-packages       0.5.9  Filesystem for Meteor, collectionFS
cfs:ui                      0.1.3  CollectionFS, provides UI helpers
ecmascript                  0.4.1  Compiler plugin that supports ES2015+ in all .js files
es5-shim                    4.5.8  Shims and polyfills to improve ECMAScript 5 support
flemay:less-autoprefixer    1.2.0  The dynamic stylesheet language + Autoprefixer
insecure                    1.0.5  (For prototyping only) Allow all database writes from the client
jquery                      1.11.6  Manipulate the DOM using CSS selectors
kadira:blaze-layout         2.3.0  Layout Manager for Blaze (works well with FlowRouter)
kadira:flow-router          2.11.0  Carefully Designed Client Side Router for Meteor
meteor-base                 1.0.2  Packages that every Meteor app needs
meteorhacks:fast-render     2.13.0  Render your app before the DDP connection even comes alive - magic?
mobile-experience           1.0.2  Packages for a great mobile user experience
momentjs:moment             2.12.0  Moment.js (official): parse, validate, manipulate, and display dates - official Meteor ...
mongo                       1.1.5  Adaptor for using MongoDB and Minimongo over DDP
semantic:ui                 2.1.8  Official Semantic UI Integration for Meteor
semantic:ui-css             2.1.2  Semantic UI - CSS Release of Semantic UI
semantic:ui-data            2.1.8  Data package for Semantic UI Meteor
session                     1.1.3  Session variable
standard-minifier-css       1.0.4  Standard css minifier used with Meteor apps by default.
standard-minifier-js        1.0.4  Standard javascript minifiers used with Meteor apps by default.
tracker                     1.0.11  Dependency tracker to allow reactive callbacks
useraccounts:flow-routing   1.13.1  UserAccounts package providing routes configuration capability via kadira:flow-router.
useraccounts:semantic-ui    1.13.1  Accounts Templates styled for Semantic UI.
zimme:active-route          2.3.2  Active route helpers

Packages added which are not included by meteor defaults:

accounts-password           1.1.6  Password support for accounts
alanning:roles              1.2.15  Authorization package for Meteor
arillo:flow-router-helpers  0.5.1  Template helpers for flow-router
cfs:access-point            0.1.49  CollectionFS, add ddp and http accesspoint capability
cfs:graphicsmagick          0.0.18  Adds `gm` to scope with the ability to perform GraphicsMagick or ImageMagick manipulation
cfs:gridfs                  0.0.33  GridFS storage adapter for CollectionFS
cfs:standard-packages       0.5.9  Filesystem for Meteor, collectionFS
cfs:ui                      0.1.3  CollectionFS, provides UI helpers
flemay:less-autoprefixer    1.2.0  The dynamic stylesheet language + Autoprefixer
kadira:blaze-layout         2.3.0  Layout Manager for Blaze (works well with FlowRouter)
kadira:flow-router          2.11.0  Carefully Designed Client Side Router for Meteor
meteorhacks:fast-render     2.13.0  Render your app before the DDP connection even comes alive - magic?
momentjs:moment             2.12.0  Moment.js (official): parse, validate, manipulate, and display dates - official Meteor ...
semantic:ui                 2.1.8  Official Semantic UI Integration for Meteor
semantic:ui-css             2.1.2  Semantic UI - CSS Release of Semantic UI
semantic:ui-data            2.1.8  Data package for Semantic UI Meteor
useraccounts:flow-routing   1.13.1  UserAccounts package providing routes configuration capability via kadira:flow-router.
useraccounts:semantic-ui    1.13.1  Accounts Templates styled for Semantic UI.
zimme:active-route          2.3.2  Active route helpers



Running:

meteor --port $IP:$PORT


--Installation Guide</H3>

    # install meteor
    curl https://install.meteor.com/ | sh

    The application and website can be hosted on meteor servers by running the Makefile that is attached 
    to the submission.

Schema:

db = {
    users: {
        _id: String
        username: String
        emails: [
            { address: String, verified: Boolean },
            ...
        ]
        profile: {
            address: String
            firstName: String
            lastName: String
            phone: String
        }
    }
    images: {
        _id: String
        owner: String <users._id>
        uploadedAt: Date
        metadata: {
            title: String
            date: Date
            description: String
            location: String
            permitted: {private, groups, public}
            groups: [String, ...]
            views: Number
        }
        original: {
            name: String <filename>
            size: Number <bytes>
            type: String <mimetype>
            uploadedAt: Date
        }
    }
}

Aliased as:
DB = {Users, Images}


Example query: (this might not be entirely correct. Unchecked in application)

DB.Images.find({
    $or: {
       "metadata.permitted": "public",
       $and: {
            "metadata.permitted": "groups",
            $in: {
                "metadata.groups": ["flowers", "trees"] // Roles.getGroupsForUser(Meteor.userId())
            }
       }
    },
    "metadata.title": /flowering/}
}, {
    sort: {date: -1}, 
    count: 10
})